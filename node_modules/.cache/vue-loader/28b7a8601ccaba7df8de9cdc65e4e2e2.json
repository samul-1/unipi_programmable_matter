{"remainingRequest":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/samuele/Desktop/vue/programmable_matter/src/components/GridCell.vue?vue&type=template&id=782571f8&ts=true","dependencies":[{"path":"/home/samuele/Desktop/vue/programmable_matter/src/components/GridCell.vue","mtime":1643713279692},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPHYtcmVndWxhci1wb2x5Z29uIDpjb25maWc9ImNvbmZpZyI+PC92LXJlZ3VsYXItcG9seWdvbj4KICA8di1saW5lIDpjb25maWc9Imhvcml6b250YWxMaW5lQ29uZmlnIj48L3YtbGluZT4KICA8di1saW5lIDpjb25maWc9InZlcnRpY2FsTGluZUNvbmZpZyI+PC92LWxpbmU+CiAgPHYtbGluZSA6Y29uZmlnPSJkaWFnMUxpbmVDb25maWciPjwvdi1saW5lPgogIDx2LWxpbmUgOmNvbmZpZz0iZGlhZzJMaW5lQ29uZmlnIj48L3YtbGluZT4K"},{"version":3,"sources":["/home/samuele/Desktop/vue/programmable_matter/src/components/GridCell.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/samuele/Desktop/vue/programmable_matter/src/components/GridCell.vue","sourceRoot":"","sourcesContent":["<template>\n  <v-regular-polygon :config=\"config\"></v-regular-polygon>\n  <v-line :config=\"horizontalLineConfig\"></v-line>\n  <v-line :config=\"verticalLineConfig\"></v-line>\n  <v-line :config=\"diag1LineConfig\"></v-line>\n  <v-line :config=\"diag2LineConfig\"></v-line>\n</template>\n\n<script lang=\"ts\">\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport { configHexagon, getHexagonApothem, getHexagonXOffset } from '@/shapes'\nimport { defineComponent } from '@vue/runtime-core'\nexport default defineComponent({\n  name: 'GridCell',\n  props: {\n    x: {\n      type: Number,\n      required: true\n    },\n    y: {\n      type: Number,\n      required: true\n    }\n  },\n  computed: {\n    config (): any {\n      return { x: this.x, y: this.y, ...configHexagon }\n    },\n    horizontalLineConfig (): any {\n      return {\n        points: [\n          this.x - this.config.radius,\n          this.y,\n          this.x + this.config.radius,\n          this.y\n        ],\n        stroke: 'black',\n        strokeWidth: 0.5\n      }\n    },\n    verticalLineConfig (): any {\n      return {\n        points: [\n          this.x,\n          this.y + getHexagonApothem(this.config.radius),\n          this.x,\n          this.y + getHexagonApothem(this.config.radius)\n        ],\n        stroke: 'black',\n        strokeWidth: 0.4\n      }\n    },\n    diag1LineConfig (): any {\n      return {\n        points: [\n          this.x - this.config.radius + getHexagonXOffset(this.config.radius),\n          this.y - 19,\n          this.x + this.config.radius - getHexagonXOffset(this.config.radius),\n          this.y + getHexagonApothem(this.config.radius)\n        ],\n        stroke: 'black',\n        strokeWidth: 0.3\n      }\n    },\n    diag2LineConfig (): any {\n      return {\n        points: [\n          this.x + this.config.radius - getHexagonXOffset(this.config.radius),\n          this.y - 19,\n          this.x - this.config.radius + getHexagonXOffset(this.config.radius),\n          this.y + getHexagonApothem(this.config.radius)\n        ],\n        stroke: 'black',\n        strokeWidth: 0.3\n      }\n    }\n  }\n})\n</script>\n\n<style></style>\n"]}]}