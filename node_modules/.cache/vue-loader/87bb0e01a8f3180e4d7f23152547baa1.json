{"remainingRequest":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue?vue&type=style&index=0&id=54d3a52e&lang=css","dependencies":[{"path":"/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue","mtime":1645011679340},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmJvZHkgewogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwp9Cg=="},{"version":3,"sources":["/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue"],"names":[],"mappings":";AA+EA,CAAC,CAAC,CAAC,EAAE;EACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACZ","file":"/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue","sourceRoot":"","sourcesContent":["<template>\n  <v-stage v-if=\"graphicalMode || loading\" ref=\"stage\" :config=\"configKonva\">\n    <v-layer>\n      <Grid @ready=\"onReady\" ref=\"grid\" :gridWidth=\"gridWidth\"></Grid>\n    </v-layer>\n    <v-layer>\n      <Particle\n        v-for=\"particle in particles\"\n        :key=\"'particle-' + particle.id\"\n        :particle=\"particle\"\n      ></Particle>\n    </v-layer>\n  </v-stage>\n  <textarea\n    style=\"visibility: hidden; position: absolute; left: 70%; top: 10%; right: 1%\"\n    rows=\"40\"\n    cols=\"30\"\n    :value=\"jsonLogs\"\n  ></textarea>\n</template>\n\n<script lang=\"ts\">\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { IParticle } from '@/interfaces'\nimport { defineComponent } from '@vue/runtime-core'\nimport { mapState } from 'vuex'\nimport Grid from './Grid.vue'\nimport Particle from './Particle.vue'\nimport { run } from '@/scheduler'\n\nconst width = window.innerWidth\nconst height = window.innerHeight\nexport default defineComponent({\n  name: 'Main',\n  components: { Grid, Particle },\n  created () {\n    //this.createParticles()\n    //run()\n  },\n  data () {\n    return {\n      configKonva: {\n        width: width,\n        height: height\n      },\n      x: 0,\n      y: 0,\n      result: 0,\n      // numParticles: 60,\n      // gridWidth: 15,\n      graphicalMode: true,\n      loading: true,\n      readyCount: 0\n      // maxRuns: 2\n    }\n  },\n  methods: {\n    async onReady () {\n      console.log('ready')\n      this.readyCount++\n\n      if (this.readyCount === this.gridWidth * this.gridWidth) {\n        // grid finished rendering; we now have the coordinates of all cells\n        await run()\n      }\n    }\n  },\n  computed: {\n    ...mapState(['cells', 'particles', 'gridWidth', 'logs']),\n    jsonLogs () {\n      return JSON.stringify(this.$store.state.logs as unknown[])\n    }\n  }\n})\n</script>\n\n<style>\nbody {\n  margin: 0;\n  padding: 0;\n}\n</style>\n"]}]}