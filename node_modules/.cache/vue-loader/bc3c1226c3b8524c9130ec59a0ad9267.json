{"remainingRequest":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue?vue&type=template&id=54d3a52e&ts=true","dependencies":[{"path":"/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue","mtime":1644252243819},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGJ1dHRvbiBAY2xpY2s9IiRzdG9yZS5zdGF0ZS5tb3ZlID0gISRzdG9yZS5zdGF0ZS5tb3ZlIj5TdGFydC9zdG9wPC9idXR0b24+CiAgPHYtc3RhZ2UgcmVmPSJzdGFnZSIgOmNvbmZpZz0iY29uZmlnS29udmEiPgogICAgPHYtbGF5ZXI+CiAgICAgIDxHcmlkIHJlZj0iZ3JpZCIgOmdyaWRXaWR0aD0iZ3JpZFdpZHRoIiA6Y2VsbE51bWJlcj0iY2VsbE51bWJlciI+PC9HcmlkPgogICAgPC92LWxheWVyPgogICAgPHYtbGF5ZXI+CiAgICAgIDxQYXJ0aWNsZQogICAgICAgIHYtZm9yPSJwYXJ0aWNsZSBpbiBwYXJ0aWNsZXMiCiAgICAgICAgOmtleT0iJ3BhcnRpY2xlLScgKyBwYXJ0aWNsZS5pZCIKICAgICAgICA6cGFydGljbGU9InBhcnRpY2xlIgogICAgICA+PC9QYXJ0aWNsZT4KICAgIDwvdi1sYXllcj4KICA8L3Ytc3RhZ2U+Cg=="},{"version":3,"sources":["/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1E,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/samuele/Desktop/vue/programmable_matter/src/components/Main.vue","sourceRoot":"","sourcesContent":["<template>\n  <button @click=\"$store.state.move = !$store.state.move\">Start/stop</button>\n  <v-stage ref=\"stage\" :config=\"configKonva\">\n    <v-layer>\n      <Grid ref=\"grid\" :gridWidth=\"gridWidth\" :cellNumber=\"cellNumber\"></Grid>\n    </v-layer>\n    <v-layer>\n      <Particle\n        v-for=\"particle in particles\"\n        :key=\"'particle-' + particle.id\"\n        :particle=\"particle\"\n      ></Particle>\n    </v-layer>\n  </v-stage>\n</template>\n\n<script lang=\"ts\">\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { IParticle } from '@/interfaces'\nimport { defineComponent } from '@vue/runtime-core'\nimport { mapState } from 'vuex'\nimport Grid from './Grid.vue'\nimport Particle from './Particle.vue'\n\nconst width = window.innerWidth\nconst height = window.innerHeight\nexport default defineComponent({\n  name: 'Main',\n  components: { Grid, Particle },\n  created () {\n    this.createParticles()\n  },\n  data () {\n    return {\n      configKonva: {\n        width: width,\n        height: height\n      },\n      x: 0,\n      y: 0,\n      result: 0,\n      numParticles: 30,\n      gridWidth: 5,\n      cellNumber: 25\n    }\n  },\n  methods: {\n    lightUpCell () {\n      this.$store.commit('selectPoint', {\n        x: this.x,\n        y: this.y\n      })\n    },\n    createParticles () {\n      //eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;[...Array(this.numParticles)].forEach(_i => {\n        this.$store.commit('pushParticle', {\n          id: uuidv4(),\n          color: this.getRandomColor(),\n          //state: 'contracted',\n          currentRow: this.getRandomRow(),\n          currentCol: this.getRandomCol()\n        } as IParticle)\n      })\n\n      //this.testParticles().forEach(p => this.$store.commit('pushParticle', p))\n    },\n    testParticles () {\n      return [\n        {\n          id: uuidv4(),\n          color: this.getRandomColor(),\n          currentRow: 2,\n          currentCol: 7\n        },\n        {\n          id: uuidv4(),\n          color: this.getRandomColor(),\n          currentRow: 3,\n          currentCol: 8\n        },\n        {\n          id: uuidv4(),\n          color: this.getRandomColor(),\n          currentRow: 4,\n          currentCol: 7\n        },\n        {\n          id: uuidv4(),\n          color: this.getRandomColor(),\n          currentRow: 3,\n          currentCol: 7\n        }\n      ] as IParticle[]\n    },\n    getRandomRow () {\n      return Math.floor(Math.random() * 2 * this.gridWidth)\n    },\n    getRandomCol () {\n      return Math.floor(Math.random() * 2 * this.gridWidth)\n    },\n    getRandomColor () {\n      const colors = ['yellow', 'red', 'blue', 'green']\n      return colors[Math.floor(Math.random() * colors.length)]\n    }\n  },\n  computed: {\n    ...mapState(['cells', 'particles'])\n  }\n})\n</script>\n\n<style>\nbody {\n  margin: 0;\n  padding: 0;\n}\n</style>\n"]}]}