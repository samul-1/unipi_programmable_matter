{"remainingRequest":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js!/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js??ref--15-2!/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/stats.ts","dependencies":[{"path":"/home/samuele/Desktop/vue/programmable_matter/src/stats.ts","mtime":1644691373190},{"path":"/home/samuele/Desktop/vue/programmable_matter/babel.config.js","mtime":1643707685170},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS9zYW11ZWxlL0Rlc2t0b3AvdnVlL3Byb2dyYW1tYWJsZV9tYXR0ZXIvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbGwuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwoKdmFyIGdldEdyaWRQb2ludERpc3RhbmNlID0gZnVuY3Rpb24gZ2V0R3JpZFBvaW50RGlzdGFuY2UocDEsIHAyKSB7CiAgcmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhwMS5ncmlkUm93IC0gcDIuZ3JpZFJvdywgMikgKyBNYXRoLnBvdyhwMS5ncmlkQ29sIC0gcDIuZ3JpZENvbCwgMikpOwp9OyAvLyBodHRwczovL3N0YWNrb3ZlcmZsb3cuY29tL2EvNTMxMDc3NzgvMTI0MjQ5NzUKCgp2YXIgcGFpcnNPZkFycmF5ID0gZnVuY3Rpb24gcGFpcnNPZkFycmF5KGFycmF5KSB7CiAgcmV0dXJuIGFycmF5LnJlZHVjZShmdW5jdGlvbiAoYWNjLCB2YWwsIGkxKSB7CiAgICByZXR1cm4gW10uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShhY2MpLCBfdG9Db25zdW1hYmxlQXJyYXkobmV3IEFycmF5KGFycmF5Lmxlbmd0aCAtIDEgLSBpMSkuZmlsbCgwKS5tYXAoZnVuY3Rpb24gKHYsIGkyKSB7CiAgICAgIHJldHVybiBbYXJyYXlbaTFdLCBhcnJheVtpMSArIDEgKyBpMl1dOwogICAgfSkpKTsKICB9LCBbXSk7Cn07CgpleHBvcnQgdmFyIGdldEdyaWREZW5zaXR5QW5kRGlhbWV0ZXIgPSBmdW5jdGlvbiBnZXRHcmlkRGVuc2l0eUFuZERpYW1ldGVyKGdyaWQpIHsKICB2YXIgZGVuc2l0eSA9IDA7CiAgdmFyIGRpYW1ldGVyID0gMDsKICB2YXIgcGFpcnMgPSBwYWlyc09mQXJyYXkoZ3JpZCk7CiAgcGFpcnMuZm9yRWFjaChmdW5jdGlvbiAocCkgewogICAgdmFyIGRpc3RhbmNlID0gZ2V0R3JpZFBvaW50RGlzdGFuY2UocFswXSwgcFsxXSk7CiAgICBkZW5zaXR5ICs9IGRpc3RhbmNlOwogICAgZGlhbWV0ZXIgPSBNYXRoLm1heChkaWFtZXRlciwgZGlzdGFuY2UpOwogIH0pOwogIHJldHVybiB7CiAgICBkZW5zaXR5OiBkZW5zaXR5LAogICAgZGlhbWV0ZXI6IGRpYW1ldGVyCiAgfTsKfTs="},{"version":3,"sources":["/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/stats.ts"],"names":[],"mappings":";;;;;;;;;AAEA,IAAM,oBAAoB,GAAG,SAAvB,oBAAuB,CAAC,EAAD,EAAgB,EAAhB;AAAA,SAC3B,IAAI,CAAC,IAAL,CACE,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,OAAH,GAAa,EAAE,CAAC,OAAzB,EAAkC,CAAlC,IACE,IAAI,CAAC,GAAL,CAAS,EAAE,CAAC,OAAH,GAAa,EAAE,CAAC,OAAzB,EAAkC,CAAlC,CAFJ,CAD2B;AAAA,CAA7B,C,CAMA;;;AACA,IAAM,YAAY,GAAG,SAAf,YAAe,CAAC,KAAD;AAAA,SACnB,KAAK,CAAC,MAAN,CACE,UAAC,GAAD,EAAM,GAAN,EAAW,EAAX;AAAA,wCACM,GADN,sBAEK,IAAI,KAAJ,CAAU,KAAK,CAAC,MAAN,GAAe,CAAf,GAAmB,EAA7B,EACA,IADA,CACK,CADL,EAEA,GAFA,CAEI,UAAC,CAAD,EAAI,EAAJ;AAAA,aAAW,CAAC,KAAK,CAAC,EAAD,CAAN,EAAY,KAAK,CAAC,EAAE,GAAG,CAAL,GAAS,EAAV,CAAjB,CAAX;AAAA,KAFJ,CAFL;AAAA,GADF,EAOE,EAPF,CADmB;AAAA,CAArB;;AAWA,OAAO,IAAM,yBAAyB,GAAG,SAA5B,yBAA4B,CACvC,IADuC,EAEE;AACzC,MAAI,OAAO,GAAG,CAAd;AACA,MAAI,QAAQ,GAAG,CAAf;AAEA,MAAM,KAAK,GAAG,YAAY,CAAC,IAAD,CAA1B;AAEA,EAAA,KAAK,CAAC,OAAN,CAAc,UAAC,CAAD,EAAM;AAClB,QAAM,QAAQ,GAAG,oBAAoB,CAAC,CAAC,CAAC,CAAD,CAAF,EAAO,CAAC,CAAC,CAAD,CAAR,CAArC;AACA,IAAA,OAAO,IAAI,QAAX;AACA,IAAA,QAAQ,GAAG,IAAI,CAAC,GAAL,CAAS,QAAT,EAAmB,QAAnB,CAAX;AACD,GAJD;AAMA,SAAO;AAAE,IAAA,OAAO,EAAP,OAAF;AAAW,IAAA,QAAQ,EAAR;AAAX,GAAP;AACD,CAfM","sourcesContent":["import { GridPoint } from './interfaces';\n\nconst getGridPointDistance = (p1: GridPoint, p2: GridPoint): number =>\n  Math.sqrt(\n    Math.pow(p1.gridRow - p2.gridRow, 2) +\n      Math.pow(p1.gridCol - p2.gridCol, 2)\n  );\n\n// https://stackoverflow.com/a/53107778/12424975\nconst pairsOfArray = (array: unknown[]) =>\n  array.reduce(\n    (acc, val, i1) => [\n      ...(acc as unknown[]),\n      ...new Array(array.length - 1 - i1)\n        .fill(0)\n        .map((v, i2) => [array[i1], array[i1 + 1 + i2]]),\n    ],\n    []\n  );\n\nexport const getGridDensityAndDiameter = (\n  grid: GridPoint[]\n): { density: number; diameter: number } => {\n  let density = 0;\n  let diameter = 0;\n\n  const pairs = pairsOfArray(grid) as [GridPoint, GridPoint][];\n\n  pairs.forEach((p) => {\n    const distance = getGridPointDistance(p[0], p[1]);\n    density += distance;\n    diameter = Math.max(diameter, distance);\n  });\n\n  return { density, diameter };\n};\n"],"sourceRoot":""}]}