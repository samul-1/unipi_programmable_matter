{"remainingRequest":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js!/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js??ref--15-2!/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/shapes.ts","dependencies":[{"path":"/home/samuele/Desktop/vue/programmable_matter/src/shapes.ts","mtime":1644253176757},{"path":"/home/samuele/Desktop/vue/programmable_matter/babel.config.js","mtime":1643707685170},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IHZhciBjb25maWdIZXhhZ29uID0gewogIHNpZGVzOiA2LAogIHJhZGl1czogMzUsCiAgcm90YXRpb246IDkwLAogIGZpbGw6ICd0cmFuc3BhcmVudCcsCiAgc3Ryb2tlOiAnYmxhY2snLAogIHN0cm9rZVdpZHRoOiAxCn07CmV4cG9ydCB2YXIgY29uZmlnQ2lyY2xlID0gewogIHJhZGl1czogOAp9OwpleHBvcnQgdmFyIE9GRlNFVF82MF9ERUdfRUxMSVBTRV9YID0gY29uZmlnSGV4YWdvbi5yYWRpdXMgLyAzLjU7CmV4cG9ydCB2YXIgT0ZGU0VUXzYwX0RFR19FTExJUFNFX1kgPSBjb25maWdIZXhhZ29uLnJhZGl1cyAvIDIuMzMzMzMzMzsKZXhwb3J0IHZhciBPRkZTRVRfMTgwX0RFR19FTExJUFNFX1ggPSBjb25maWdIZXhhZ29uLnJhZGl1cyAvIDI7CmV4cG9ydCB2YXIgT0ZGU0VUXzE4MF9ERUdfRUxMSVBTRV9ZID0gMDsKZXhwb3J0IHZhciBPRkZTRVRfMjQwX0RFR19FTExJUFNFX1ggPSBjb25maWdIZXhhZ29uLnJhZGl1cyAvIDQuMTE3NjQ3MDY7CmV4cG9ydCB2YXIgT0ZGU0VUXzI0MF9ERUdfRUxMSVBTRV9ZID0gY29uZmlnSGV4YWdvbi5yYWRpdXMgLyAyLjMzMzMzMzMzOwpleHBvcnQgdmFyIGRpYWdvbmFsRWxsaXBzZUNvbmZpZyA9IHsKICByYWRpdXNYOiAxNy41LAogIHJhZGl1c1k6IDcuNQp9OwpleHBvcnQgdmFyIGhvcml6b250YWxFbGxpcHNlQ29uZmlnID0gewogIHJhZGl1c1g6IDIwLAogIHJhZGl1c1k6IDcuNQp9Owp2YXIgSEVYQUdPTl9DT05TVEFOVCA9IDAuODY2OwpleHBvcnQgdmFyIGdldEhleGFnb25BcG90aGVtID0gZnVuY3Rpb24gZ2V0SGV4YWdvbkFwb3RoZW0ocmFkaXVzKSB7CiAgcmV0dXJuIHJhZGl1cyAqIE1hdGguc3FydCgzKSAvIDI7Cn07CmV4cG9ydCB2YXIgZ2V0SGV4YWdvblNpZGUgPSBmdW5jdGlvbiBnZXRIZXhhZ29uU2lkZShyYWRpdXMpIHsKICByZXR1cm4gZ2V0SGV4YWdvbkFwb3RoZW0ocmFkaXVzKSAvIEhFWEFHT05fQ09OU1RBTlQ7Cn07CmV4cG9ydCB2YXIgZ2V0SGV4YWdvblhPZmZzZXQgPSBmdW5jdGlvbiBnZXRIZXhhZ29uWE9mZnNldChyYWRpdXMpIHsKICByZXR1cm4gTWF0aC5zcXJ0KE1hdGgucG93KGdldEhleGFnb25TaWRlKHJhZGl1cyksIDIpIC0gTWF0aC5wb3coZ2V0SGV4YWdvbkFwb3RoZW0ocmFkaXVzKSwgMikpOwp9Ow=="},{"version":3,"sources":["/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/shapes.ts"],"names":[],"mappings":"AAAA,OAAO,IAAM,aAAa,GAAG;AAC3B,EAAA,KAAK,EAAE,CADoB;AAE3B,EAAA,MAAM,EAAE,EAFmB;AAG3B,EAAA,QAAQ,EAAE,EAHiB;AAI3B,EAAA,IAAI,EAAE,aAJqB;AAK3B,EAAA,MAAM,EAAE,OALmB;AAM3B,EAAA,WAAW,EAAE;AANc,CAAtB;AASP,OAAO,IAAM,YAAY,GAAG;AAC1B,EAAA,MAAM,EAAE;AADkB,CAArB;AAIP,OAAO,IAAM,uBAAuB,GAAG,aAAa,CAAC,MAAd,GAAuB,GAAvD;AACP,OAAO,IAAM,uBAAuB,GAClC,aAAa,CAAC,MAAd,GAAuB,SADlB;AAEP,OAAO,IAAM,wBAAwB,GAAG,aAAa,CAAC,MAAd,GAAuB,CAAxD;AACP,OAAO,IAAM,wBAAwB,GAAG,CAAjC;AACP,OAAO,IAAM,wBAAwB,GACnC,aAAa,CAAC,MAAd,GAAuB,UADlB;AAEP,OAAO,IAAM,wBAAwB,GACnC,aAAa,CAAC,MAAd,GAAuB,UADlB;AAGP,OAAO,IAAM,qBAAqB,GAAG;AACnC,EAAA,OAAO,EAAE,IAD0B;AAEnC,EAAA,OAAO,EAAE;AAF0B,CAA9B;AAKP,OAAO,IAAM,uBAAuB,GAAG;AACrC,EAAA,OAAO,EAAE,EAD4B;AAErC,EAAA,OAAO,EAAE;AAF4B,CAAhC;AAKP,IAAM,gBAAgB,GAAG,KAAzB;AAEA,OAAO,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,MAAD;AAAA,SAC9B,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,CAAV,CAAV,GAA0B,CADK;AAAA,CAA1B;AAGP,OAAO,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAC,MAAD;AAAA,SAC5B,iBAAiB,CAAC,MAAD,CAAjB,GAA4B,gBADA;AAAA,CAAvB;AAGP,OAAO,IAAM,iBAAiB,GAAG,SAApB,iBAAoB,CAAC,MAAD;AAAA,SAC/B,IAAI,CAAC,IAAL,CACE,IAAI,CAAC,GAAL,CAAS,cAAc,CAAC,MAAD,CAAvB,EAAiC,CAAjC,IACE,IAAI,CAAC,GAAL,CAAS,iBAAiB,CAAC,MAAD,CAA1B,EAAoC,CAApC,CAFJ,CAD+B;AAAA,CAA1B","sourcesContent":["export const configHexagon = {\n  sides: 6,\n  radius: 35,\n  rotation: 90,\n  fill: 'transparent',\n  stroke: 'black',\n  strokeWidth: 1,\n};\n\nexport const configCircle = {\n  radius: 8,\n};\n\nexport const OFFSET_60_DEG_ELLIPSE_X = configHexagon.radius / 3.5;\nexport const OFFSET_60_DEG_ELLIPSE_Y =\n  configHexagon.radius / 2.3333333;\nexport const OFFSET_180_DEG_ELLIPSE_X = configHexagon.radius / 2;\nexport const OFFSET_180_DEG_ELLIPSE_Y = 0;\nexport const OFFSET_240_DEG_ELLIPSE_X =\n  configHexagon.radius / 4.11764706;\nexport const OFFSET_240_DEG_ELLIPSE_Y =\n  configHexagon.radius / 2.33333333;\n\nexport const diagonalEllipseConfig = {\n  radiusX: 17.5,\n  radiusY: 7.5,\n};\n\nexport const horizontalEllipseConfig = {\n  radiusX: 20,\n  radiusY: 7.5,\n};\n\nconst HEXAGON_CONSTANT = 0.866;\n\nexport const getHexagonApothem = (radius: number): number =>\n  (radius * Math.sqrt(3)) / 2;\n\nexport const getHexagonSide = (radius: number): number =>\n  getHexagonApothem(radius) / HEXAGON_CONSTANT;\n\nexport const getHexagonXOffset = (radius: number): number =>\n  Math.sqrt(\n    Math.pow(getHexagonSide(radius), 2) -\n      Math.pow(getHexagonApothem(radius), 2)\n  );\n"],"sourceRoot":""}]}