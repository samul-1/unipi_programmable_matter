{"remainingRequest":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js!/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js??ref--15-2!/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/store/index.ts","dependencies":[{"path":"/home/samuele/Desktop/vue/programmable_matter/src/store/index.ts","mtime":1644847008462},{"path":"/home/samuele/Desktop/vue/programmable_matter/babel.config.js","mtime":1643707685170},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/store/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable */\nimport {\n  ExtensionAngle,\n  GridPoint,\n  IParticle,\n  ParticleState,\n  RunStats,\n} from '@/interfaces';\nimport { gridPointToGridCoordinates, pointsEqual } from '@/utils';\nimport { createStore } from 'vuex';\n\nconst getDefaultState = () => ({\n  gridPoints: [] as GridPoint[],\n  particles: [] as IParticle[],\n  move: true,\n  algorithm: 'b' as 'a' | 'b' | 'c',\n  logs: [] as RunStats[],\n  runCount: 0,\n  maxRuns: 10,\n  gridWidth: 15,\n  numParticles: 20,\n});\n\nconst initialState = getDefaultState();\n\nexport default createStore({\n  state: initialState,\n  getters: {\n    populatedGrid: (state, getters) =>\n      state.gridPoints.filter((p) => !getters.isGridPointFree(p)),\n    nonObstacleParticles: (state) =>\n      state.particles.filter((p) => !p.isObstacle),\n    obstacleParticles: (state) =>\n      state.particles.filter((p) => p.isObstacle),\n    isGridPointFree: (state) => (point: GridPoint) =>\n      !state.particles.find(\n        (p) =>\n          p.currentRow == point.gridRow &&\n          p.currentCol == point.gridCol\n      ),\n    isGridPointObstacle: (state) => (point: GridPoint) =>\n      state.particles.find(\n        (p) =>\n          p.currentRow == point.gridRow &&\n          p.currentCol == point.gridCol\n      )?.isObstacle,\n    isPointIsolated: (state, getters) => (point: GridPoint) =>\n      (getters.getNeighbors(point) as GridPoint[]).every((p) =>\n        getters.isGridPointFree(p)\n      ),\n    getParticleTarget:\n      (state) =>\n      (particleId: string): GridPoint | undefined =>\n        state.particles.find((p) => p.id == particleId)?.targetPoint,\n    getParticleState:\n      (state) =>\n      (particleId: string): ParticleState =>\n        state.particles.find((p) => p.id == particleId)\n          ?.targetPoint != null\n          ? 'extended'\n          : 'contracted',\n    getParticleExtensionAngle:\n      (state, getters) =>\n      (particleId: string): ExtensionAngle => {\n        const particle = state.particles.find(\n          (p) => p.id == particleId\n        ) as IParticle;\n        const target = particle?.targetPoint as GridPoint;\n        const particlePoint = state.gridPoints.find(\n          (p) =>\n            p.gridCol == particle.currentCol &&\n            p.gridRow == particle.currentRow\n        );\n\n        if (\n          pointsEqual(target, getters.topLeftNeighbor(particlePoint))\n        ) {\n          return 60;\n        }\n        if (\n          pointsEqual(target, getters.topRightNeighbor(particlePoint))\n        ) {\n          return -60;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.centerLeftNeighbor(particlePoint)\n          )\n        ) {\n          return -180;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.centerRightNeighbor(particlePoint)\n          )\n        ) {\n          return 180;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.bottomLeftNeighbor(particlePoint)\n          )\n        ) {\n          return -240;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.bottomRightNeighbor(particlePoint)\n          )\n        ) {\n          return 240;\n        }\n        console.error('!!!!', 'from', particlePoint, 'to', target);\n        throw new Error();\n      },\n    getPoint: (state) => (row: number, col: number) =>\n      state.gridPoints.find(\n        (p) => p.gridCol == col && p.gridRow == row\n      ),\n    topLeftNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol - (point.gridRow % 2) &&\n          p.gridRow == point.gridRow - 1\n      ),\n    topRightNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol + (1 - (point.gridRow % 2)) &&\n          p.gridRow == point.gridRow - 1\n      ),\n    centerLeftNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol - 1 && p.gridRow == point.gridRow\n      ),\n    centerRightNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol + 1 && p.gridRow == point.gridRow\n      ),\n    bottomLeftNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol - (point.gridRow % 2) &&\n          p.gridRow == point.gridRow + 1\n      ),\n    bottomRightNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol + (1 - (point.gridRow % 2)) &&\n          p.gridRow == point.gridRow + 1\n      ),\n    getFreeNeighborsInterval:\n      (state, getters) => (point: GridPoint) => {\n        const neighbors = getters.getNeighbors(point) as GridPoint[];\n        const toInspect = neighbors.concat(neighbors);\n        let currentInterval = [] as GridPoint[];\n        let lastFreeIndex = -1;\n        let hasEncounteredOccupiedCell = false;\n        let stop = false;\n        let thereIsNearbyObstacle = false;\n\n        const intervals = [] as GridPoint[][];\n        toInspect.forEach((p, i) => {\n          if (stop) {\n            return;\n          }\n          if (getters.isGridPointFree(p)) {\n            currentInterval.push(p);\n\n            if (\n              currentInterval.length === 6 ||\n              i === toInspect.length - 1\n            ) {\n              intervals.push(currentInterval);\n              stop = true;\n            }\n\n            // if (i >= neighbors.length && i === lastFreeIndex) {\n            //   stop = true;\n            // }\n            // if (!hasEncounteredOccupiedCell && i < neighbors.length) {\n            //   lastFreeIndex = i;\n            // }\n          } else {\n            if (currentInterval.length === 5) {\n              stop = true;\n            }\n\n            if (getters.isGridPointObstacle(p)) {\n              thereIsNearbyObstacle = true;\n            }\n            // hasEncounteredOccupiedCell = true;\n            intervals.push(currentInterval);\n            currentInterval = [];\n          }\n        });\n\n        intervals.sort(\n          (a: GridPoint[], b: GridPoint[]) => b.length - a.length\n        );\n\n        return {\n          freeNeighborInterval: intervals[0],\n          obstacle: thereIsNearbyObstacle,\n        };\n      },\n    getNeighbors: (state, getters) => (point: GridPoint) =>\n      [\n        ...(getters.topLeftNeighbor(point)\n          ? [getters.topLeftNeighbor(point)]\n          : []),\n        ...(getters.topRightNeighbor(point)\n          ? [getters.topRightNeighbor(point)]\n          : []),\n        ...(getters.centerRightNeighbor(point)\n          ? [getters.centerRightNeighbor(point)]\n          : []),\n        ...(getters.bottomRightNeighbor(point)\n          ? [getters.bottomRightNeighbor(point)]\n          : []),\n        ...(getters.bottomLeftNeighbor(point)\n          ? [getters.bottomLeftNeighbor(point)]\n          : []),\n        ...(getters.centerLeftNeighbor(point)\n          ? [getters.centerLeftNeighbor(point)]\n          : []),\n      ],\n  },\n  actions: {\n    startRun({ state }) {\n      state.particles.length = 0;\n      state.runCount++;\n      // reset state except for logs\n      // Object.assign(state, {\n      //   ...initialState,\n      //   gridPoints: state.gridPoints, // keep the grid as it's only rendered once\n      //   logs: state.logs, // keep logs from last run\n      //   runCount: state.runCount + 1, //update run count\n      // });\n    },\n    addLogRecord({ commit, state, getters }) {\n      commit('addLogRecord', {\n        algorithm: state.algorithm,\n        particleNumber: state.particles.length,\n        obstacleNumber: state.particles.filter((p) => p.isObstacle)\n          .length,\n        rounds: 0,\n        moves: 0,\n        initialDiameter: 0,\n        initialDensity: 0,\n        initialConfiguration: JSON.parse(\n          JSON.stringify(\n            (getters.populatedGrid as GridPoint[]).map((p) =>\n              gridPointToGridCoordinates(p)\n            )\n          )\n        ),\n      } as RunStats);\n    },\n    updateCurrentLogRecord({ state }, payload) {\n      const target = state.logs[state.logs.length - 1];\n      Object.assign(target, { ...target, ...payload });\n    },\n  },\n  mutations: {\n    addLogRecord: (state, payload) => state.logs.push(payload),\n    updateParticlePosition: (\n      state,\n      { id, newPoint }: { id: string; newPoint: GridPoint }\n    ) => {\n      const target = state.particles.find((p) => p.id == id);\n      if (target) {\n        target.currentCol = newPoint.gridCol;\n        target.currentRow = newPoint.gridRow;\n      }\n    },\n    updateParticleTarget: (\n      state,\n      {\n        id,\n        target,\n      }: {\n        id: string;\n        target: GridPoint;\n      }\n    ) => {\n      const particle = state.particles.find((p) => p.id == id);\n      if (particle) {\n        particle.targetPoint = target;\n      }\n    },\n    moveParticleToTarget: (\n      state,\n      {\n        id,\n      }: {\n        id: string;\n      }\n    ) => {\n      const particle = state.particles.find((p) => p.id == id);\n      if (particle) {\n        particle.currentRow = (\n          particle.targetPoint as GridPoint\n        ).gridRow;\n        particle.currentCol = (\n          particle.targetPoint as GridPoint\n        ).gridCol;\n        particle.targetPoint = undefined;\n      }\n    },\n    pushGridPoints: (state, points) => {\n      console.log('pushing points');\n      (points as GridPoint[]).forEach((p) => {\n        if (\n          !state.gridPoints.find(\n            (p2) =>\n              p.gridCol === p2.gridCol && p.gridRow === p2.gridRow\n          )\n        ) {\n          state.gridPoints.push(p);\n        }\n      });\n    },\n    pushParticle: (state, particle) => {\n      console.log('push particle');\n      state.particles.push(particle);\n    },\n  },\n});\n"],"sourceRoot":""}]}