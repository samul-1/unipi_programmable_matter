{"remainingRequest":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js!/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js??ref--15-2!/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/store/index.ts","dependencies":[{"path":"/home/samuele/Desktop/vue/programmable_matter/src/store/index.ts","mtime":1644252113553},{"path":"/home/samuele/Desktop/vue/programmable_matter/babel.config.js","mtime":1643707685170},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/samuele/Desktop/vue/programmable_matter/node_modules/eslint-loader/index.js??ref--14-0!/home/samuele/Desktop/vue/programmable_matter/src/store/index.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable */\nimport {\n  ExtensionAngle,\n  GridPoint,\n  IParticle,\n  ParticleState,\n} from '@/interfaces';\nimport { pointsEqual } from '@/utils';\nimport { createStore } from 'vuex';\n\nexport default createStore({\n  state: {\n    gridPoints: [] as GridPoint[],\n    particles: [] as IParticle[],\n    move: true,\n  },\n  getters: {\n    isGridPointFree: (state) => (point: GridPoint) =>\n      !state.particles.find(\n        (p) =>\n          p.currentRow == point.gridRow &&\n          p.currentCol == point.gridCol\n      ),\n    getParticleTarget:\n      (state) =>\n      (particleId: string): GridPoint | undefined =>\n        state.particles.find((p) => p.id == particleId)?.targetPoint,\n    getParticleState:\n      (state) =>\n      (particleId: string): ParticleState =>\n        state.particles.find((p) => p.id == particleId)\n          ?.targetPoint != null\n          ? 'extended'\n          : 'contracted',\n    getParticleExtensionAngle:\n      (state, getters) =>\n      (particleId: string): ExtensionAngle => {\n        const particle = state.particles.find(\n          (p) => p.id == particleId\n        ) as IParticle;\n        const target = particle?.targetPoint as GridPoint;\n        const particlePoint = state.gridPoints.find(\n          (p) =>\n            p.gridCol == particle.currentCol &&\n            p.gridRow == particle.currentRow\n        );\n\n        if (\n          pointsEqual(target, getters.topLeftNeighbor(particlePoint))\n        ) {\n          return 60;\n        }\n        if (\n          pointsEqual(target, getters.topRightNeighbor(particlePoint))\n        ) {\n          return -60;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.centerLeftNeighbor(particlePoint)\n          )\n        ) {\n          return -180;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.centerRightNeighbor(particlePoint)\n          )\n        ) {\n          return 180;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.bottomLeftNeighbor(particlePoint)\n          )\n        ) {\n          return -240;\n        }\n        if (\n          pointsEqual(\n            target,\n            getters.bottomRightNeighbor(particlePoint)\n          )\n        ) {\n          return 240;\n        }\n        console.error('!!!!', 'from', particlePoint, 'to', target);\n        throw new Error();\n      },\n    getPoint: (state) => (row: number, col: number) =>\n      state.gridPoints.find(\n        (p) => p.gridCol == col && p.gridRow == row\n      ),\n    topLeftNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol - (point.gridRow % 2) &&\n          p.gridRow == point.gridRow - 1\n      ),\n    topRightNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol + (1 - (point.gridRow % 2)) &&\n          p.gridRow == point.gridRow - 1\n      ),\n    centerLeftNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol - 1 && p.gridRow == point.gridRow\n      ),\n    centerRightNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol + 1 && p.gridRow == point.gridRow\n      ),\n    bottomLeftNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol - (point.gridRow % 2) &&\n          p.gridRow == point.gridRow + 1\n      ),\n    bottomRightNeighbor: (state) => (point: GridPoint) =>\n      state.gridPoints.find(\n        (p) =>\n          p.gridCol == point.gridCol + (1 - (point.gridRow % 2)) &&\n          p.gridRow == point.gridRow + 1\n      ),\n    getFreeNeighborsInterval:\n      (state, getters) => (point: GridPoint) => {\n        const neighbors = getters.getNeighbors(point) as GridPoint[];\n        const toInspect = neighbors.concat(neighbors);\n        let currentInterval = [] as GridPoint[];\n        let lastFreeIndex = -1;\n        let hasEncounteredOccupiedCell = false;\n        let stop = false;\n\n        const intervals = [] as GridPoint[][];\n        toInspect.forEach((p, i) => {\n          if (stop) {\n            return;\n          }\n          if (getters.isGridPointFree(p)) {\n            console.log(\n              'pushing',\n              p,\n              'to',\n              currentInterval,\n              'for',\n              point.gridRow,\n              point.gridCol\n            );\n            currentInterval.push(p);\n\n            if (\n              currentInterval.length === 6 ||\n              i === toInspect.length - 1\n            ) {\n              intervals.push(currentInterval);\n              stop = true;\n            }\n\n            // if (i >= neighbors.length && i === lastFreeIndex) {\n            //   stop = true;\n            // }\n            // if (!hasEncounteredOccupiedCell && i < neighbors.length) {\n            //   lastFreeIndex = i;\n            // }\n          } else {\n            if (currentInterval.length === 5) {\n              stop = true;\n            }\n            // hasEncounteredOccupiedCell = true;\n            intervals.push([...currentInterval]);\n            currentInterval = [];\n          }\n        });\n\n        console.log(\n          'ROW',\n          point.gridRow,\n          'COL',\n          point.gridCol,\n          'INTERVALS',\n          intervals\n        );\n        intervals.sort(\n          (a: GridPoint[], b: GridPoint[]) => b.length - a.length\n        );\n\n        return intervals[0];\n        //return currentInterval;\n      },\n    getNeighbors: (state, getters) => (point: GridPoint) =>\n      [\n        ...(getters.topLeftNeighbor(point)\n          ? [getters.topLeftNeighbor(point)]\n          : []),\n        ...(getters.topRightNeighbor(point)\n          ? [getters.topRightNeighbor(point)]\n          : []),\n        ...(getters.centerRightNeighbor(point)\n          ? [getters.centerRightNeighbor(point)]\n          : []),\n        ...(getters.bottomRightNeighbor(point)\n          ? [getters.bottomRightNeighbor(point)]\n          : []),\n        ...(getters.bottomLeftNeighbor(point)\n          ? [getters.bottomLeftNeighbor(point)]\n          : []),\n        ...(getters.centerLeftNeighbor(point)\n          ? [getters.centerLeftNeighbor(point)]\n          : []),\n      ],\n  },\n  mutations: {\n    updateParticlePosition: (\n      state,\n      { id, newPoint }: { id: string; newPoint: GridPoint }\n    ) => {\n      const target = state.particles.find((p) => p.id == id);\n      if (target) {\n        target.currentCol = newPoint.gridCol;\n        target.currentRow = newPoint.gridRow;\n      }\n    },\n    updateParticleTarget: (\n      state,\n      {\n        id,\n        target,\n      }: {\n        id: string;\n        target: GridPoint;\n      }\n    ) => {\n      const particle = state.particles.find((p) => p.id == id);\n      if (particle) {\n        particle.targetPoint = target;\n      }\n    },\n    moveParticleToTarget: (\n      state,\n      {\n        id,\n      }: {\n        id: string;\n      }\n    ) => {\n      const particle = state.particles.find((p) => p.id == id);\n      if (particle) {\n        particle.currentRow = (\n          particle.targetPoint as GridPoint\n        ).gridRow;\n        particle.currentCol = (\n          particle.targetPoint as GridPoint\n        ).gridCol;\n        particle.targetPoint = undefined;\n      }\n    },\n    pushGridPoints: (state, points) =>\n      state.gridPoints.push(...points),\n    pushParticle: (state, particle) => state.particles.push(particle),\n  },\n});\n"],"sourceRoot":""}]}